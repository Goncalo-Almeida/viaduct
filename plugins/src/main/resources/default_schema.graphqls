# TODO: Build this automatically from the utility in :shared:graphql

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

"@backingData directive"
directive @backingData(class: String!) on FIELD_DEFINITION

"@idOf directive"
directive @idOf(type: String!) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

"@resolver directive"
directive @resolver on OBJECT | FIELD_DEFINITION

"@scope directive"
directive @scope(to: [String!]!) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT

interface Node @scope(to: ["*"]) {
  id: ID!
}

type Mutation @scope(to: ["*"]) {
  _: String @deprecated(reason: "Dummy field to ensure root type is valid. Do not use.")
}

type Query @scope(to: ["*"]) {
  _: String @deprecated(reason: "Dummy field to ensure root type is valid. Do not use.")
}

type Subscription @scope(to: ["*"]) {
  _: String @deprecated(reason: "Dummy field to ensure root type is valid. Do not use.")
}

"Custom scalar type for private fields"
scalar BackingData

"An 8-bit signed integer"
scalar Byte

"An RFC-3339 compliant Full Date Scalar"
scalar Date

"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

"A JSON scalar"
scalar JSON

"Airbnb specific Long type that serializes/deserializes to/from a string."
scalar Long

"A 16-bit signed integer"
scalar Short

"An RFC-3339 compliant Full Time Scalar"
scalar Time
